package infosupport.be.util;

import org.springframework.ai.transformer.splitter.TextSplitter;

import java.util.ArrayList;
import java.util.List;

/**
 * Custom text splitter that splits text based on a list of separators.
 * Generated by ChatGPT
 */
public class CustomTextSplitter extends TextSplitter {

    private final List<String> separators;

    public CustomTextSplitter(List<String> separators) {
        this.separators = separators;
    }
    public CustomTextSplitter(String separator) {
        this.separators = new ArrayList<>();
        this.separators.add(separator);
    }

    protected List<String> splitText(String text) {
        List<String> chunks = new ArrayList<>();
        int index = 0;

        while (index < text.length()) {
            boolean startsWithSeparator = false;
            String currentSeparator = null;

            // Check if the current index starts with any of the separators
            for (String separator : separators) {
                if (text.startsWith(separator, index)) {
                    startsWithSeparator = true;
                    currentSeparator = separator;
                    break;
                }
            }

            if (startsWithSeparator) {
                // Current index starts with a separator
                // Find the next separator after the current one
                int nextIndex = -1;
                for (String separator : separators) {
                    int separatorIndex = text.indexOf(separator, index + currentSeparator.length());
                    if (separatorIndex != -1 && (nextIndex == -1 || separatorIndex < nextIndex)) {
                        nextIndex = separatorIndex;
                    }
                }

                if (nextIndex != -1) {
                    // Extract chunk from current index to next separator
                    String chunk = text.substring(index, nextIndex).trim();
                    if (!chunk.isEmpty()) {
                        chunks.add(chunk);
                    }
                    index = nextIndex;
                } else {
                    // No more separators; add the rest of the text
                    String chunk = text.substring(index).trim();
                    if (!chunk.isEmpty()) {
                        chunks.add(chunk);
                    }
                    break;
                }
            } else {
                // Current index does not start with a separator
                // Find the next separator
                int nextIndex = -1;
                for (String separator : separators) {
                    int separatorIndex = text.indexOf(separator, index);
                    if (separatorIndex != -1 && (nextIndex == -1 || separatorIndex < nextIndex)) {
                        nextIndex = separatorIndex;
                    }
                }

                if (nextIndex != -1) {
                    // Extract chunk up to the next separator
                    String chunk = text.substring(index, nextIndex).trim();
                    if (!chunk.isEmpty()) {
                        chunks.add(chunk);
                    }
                    index = nextIndex;
                } else {
                    // No more separators; add the rest of the text
                    String chunk = text.substring(index).trim();
                    if (!chunk.isEmpty()) {
                        chunks.add(chunk);
                    }
                    break;
                }
            }
        }
        return chunks;
    }
}